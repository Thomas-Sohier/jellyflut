name: Main workflow
on: push

env:
  KEY_STORE_PASSWORD: ${{ secrets.KEY_STORE_PASSWORD }}
  KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
  ALIAS: ${{ secrets.ALIAS }}
  KEY_PATH: key.jks

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: subosito/flutter-action@v1
      with:
        channel: "stable"

    - run: flutter pub get
    - run: dart format -l 120 --set-exit-if-changed .
    - run: bash builder_runner_all.sh
    - run: flutter analyze .
   
  build_windows:
    if: startsWith(github.ref, 'refs/tags/v')
    needs: test
    
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
      - uses: subosito/flutter-action@v1
        with:
          channel: "stable"
      - run: flutter config --enable-windows-desktop
      - run: flutter pub get
      - run: bash builder_runner_all.sh
      - run: flutter build windows
      - run: cp windows/libs/sqlite3.dll build/windows/runner/Release/sqlite3.dll

      - name: Create a windows app-bundle
        uses: thedoctor0/zip-release@master
        with:
          type: 'zip'
          path: 'build/windows/runner/Release'
          filename: ' jellyflut-windows.zip'

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          draft: true
          prerelease: false
          files: jellyflut-windows.zip
          token: ${{ secrets.GITHUB_TOKEN }}
      
  build_linux:
    if: startsWith(github.ref, 'refs/tags/v')
    needs: test
    
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: subosito/flutter-action@v1
        with:
          channel: "stable"
      - run: sudo apt-get update -y
      - run: sudo apt-get install -y clang cmake libmpv-dev libmpv2 ninja-build pkg-config libgtk-3-dev vlc libvlc-dev libwebkit2gtk-4.0-dev libmediainfo-dev dpkg-dev alien
      - run: flutter config --enable-linux-desktop
      - run: flutter pub get
      - run: bash builder_runner_all.sh
      - run: flutter build linux

      - name: Build .deb executable
        run: |
          cp -fr build/linux/x64/release/bundle linux/debian/usr/bin
          dpkg-deb --build --root-owner-group linux/debian
          cp linux/*.deb jellyflut-linux-x86_64.deb
          
      - name: Build .rpm executable
        run: |
          alien -r jellyflut-linux-x86_64.deb
          mv jellyflut*.rpm jellyflut-linux-x86_64.rpm

      - name: Build Tarball
        run: |
          mkdir -p AppDir/
          cp -r linux/debian/usr AppDir/
          ln -sr AppDir/usr/bin/jellyflut AppDir/jellyflut
          tar czf jellyflut-linux-x86_64.tar.gz -C AppDir/ .

      - name: Build AppImage
        run: |
          echo '#!/bin/sh
          cd "$(dirname "$0")"
          exec ./jellyflut' > AppDir/AppRun
          chmod +x AppDir/AppRun
          chmod +x AppDir/jellyflut
          ln -sr AppDir/usr/share/icons/hicolor/256x256/apps/jellyflut.png AppDir/jellyflut.png
          cp AppDir/usr/share/applications/jellyflut.desktop AppDir/jellyflut.desktop
          curl -L https://github.com/AppImage/AppImageKit/releases/download/continuous/appimagetool-x86_64.AppImage -o appimagetool-x86_64.AppImage
          chmod +x appimagetool-x86_64.AppImage
          ARCH=x86_64 ./appimagetool-x86_64.AppImage AppDir/ jellyflut-linux-x86_64.AppImage

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          draft: true
          prerelease: false
          files: jellyflut-linux-*
          token: ${{ secrets.GITHUB_TOKEN }}

  build_android:
    if: startsWith(github.ref, 'refs/tags/v')
    needs: test

    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: subosito/flutter-action@v1
        with:
          channel: "stable"

      - run: echo $ANDROID_KEYS | base64 -d > android/app/key.jks
        env:
          ANDROID_KEYS: ${{ secrets.ANDROID_KEYS }}

      - run: flutter pub get
      - run: bash builder_runner_all.sh
      - run: flutter build apk --split-per-abi
      - run: cp build/app/outputs/flutter-apk/app*.apk .

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          draft: true
          prerelease: false
          files: |
            app*.apk
          token: ${{ secrets.GITHUB_TOKEN }}
